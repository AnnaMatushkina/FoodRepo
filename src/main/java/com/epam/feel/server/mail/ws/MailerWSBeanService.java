package com.epam.feel.server.mail.ws;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.7-b01- Generated source version: 2.1
 * 
 */
@WebServiceClient (name = "MailerWSBeanService", targetNamespace = "http://ejb.ws.mailer.epam.com/", wsdlLocation = "http://evrusamsd0128:8080/20core/MailerWSBean?wsdl")
public class MailerWSBeanService extends Service {

    private final static URL MAILERWSBEANSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.epam.feel.server.mail.ws.MailerWSBeanService.class
        .getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.epam.feel.server.mail.ws.MailerWSBeanService.class.getResource(".");
            url = new URL(baseUrl, "http://evrusamsd0128:8080/20core/MailerWSBean?wsdl");
        } catch (MalformedURLException e) {
            logger
                .warning("Failed to create URL for the wsdl Location: 'http://evrusamsd0128:8080/20core/MailerWSBean?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        MAILERWSBEANSERVICE_WSDL_LOCATION = url;
    }

    public MailerWSBeanService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MailerWSBeanService() {
        super(MAILERWSBEANSERVICE_WSDL_LOCATION, new QName("http://ejb.ws.mailer.epam.com/", "MailerWSBeanService"));
    }

    /**
     * 
     * @return returns MailerWS
     */
    @WebEndpoint (name = "MailerWSBeanPort")
    public MailerWS getMailerWSBeanPort() {
        return super.getPort(new QName("http://ejb.ws.mailer.epam.com/", "MailerWSBeanPort"), MailerWS.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in
     *            the <code>features</code> parameter will have their default values.
     * @return returns MailerWS
     */
    @WebEndpoint (name = "MailerWSBeanPort")
    public MailerWS getMailerWSBeanPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ejb.ws.mailer.epam.com/", "MailerWSBeanPort"), MailerWS.class, features);
    }

}
